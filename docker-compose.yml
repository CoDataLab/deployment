version: "3.8"

services:

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # REMOVE the old self-signed SSL mount
      # - ./nginx/ssl:/etc/nginx/ssl 
      
      # ADD the Let's Encrypt volume (read-only is good practice)
      - /etc/letsencrypt:/etc/letsencrypt:ro

      - frontend-build:/var/www/react-build
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8082"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://badis:12332Mps100Pk3dzfde07@mongo:27017/mydb?authSource=mydb
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_NAME=${COOKIE_NAME}
    depends_on:
      - mongo
    networks:
      - app_network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend-build:/usr/share/nginx/html # Write to the named volume
    networks:
      - app_network
    # No restart policy needed; this container builds and exits.

  mongo:
    image: mongo:6.0 # Pin a specific version, don't use :latest
    restart: always
    ports:
     - "27017:27017" # Exposing the DB is a security risk. Uncomment for local debugging if needed.
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro # Mount the init script
    networks:
      - app_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

networks:
  app_network:
    driver: bridge

volumes:
  mongo-data:
  frontend-build: