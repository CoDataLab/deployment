version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: mydb
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - mern-network

  # Backend Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      - PORT=8082
      - MONGO_URI=mongodb://badisjl99:123951Ba008@mongodb:27017/mydb
      - JWT_SECRET=BFEec8JKk:FZz3f0F812f.0051293f
      - COOKIE_NAME=token
      - NODE_ENV=production
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
    networks:
      - mern-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    environment:
      - VITE_HOST_API=https://codatalab.cloud/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mern-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mern-network

volumes:
  mongodb_data:

networks:
  mern-network:
    driver: bridge