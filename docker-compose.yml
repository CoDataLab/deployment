version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: admin
    volumes:
      - dbdata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      PORT: 8082
      MONGO_URI: mongodb://badisjl99:123951Ba008@mongo:27017/mydb?authSource=mydb
      JWT_SECRET: BFEec8JKk:FZz3f0F812f.0051293f
      COOKIE_NAME: token
    depends_on:
      - mongo
    networks:
      - app-network

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro  # If you update conf
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
      - ./dhparam:/etc/ssl/certs:ro
    depends_on:
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/certbot --email badisjlassi86@gmail.com --agree-tos --no-eff-email -d codatalab.cloud

volumes:
  dbdata:
  certbot-etc:
  certbot-www:

networks:
  app-network:
    driver: bridge