version: '3'

services:
  db:
    image: mongo:latest
    container_name: db
    restart: unless-stopped
    volumes:
      - dbdata:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=mydb
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: mern-backend
    container_name: backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8082
      - MONGO_URI=mongodb://badisjl99:123951Ba008@db:27017/mydb 
      - JWT_SECRET=BFEec8JKk:FZz3f0F812f.0051293f

    depends_on:
      - db
    networks:
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email badisjlassi86@gmail.com --agree-tos --no-eff-email --force-renewal -d codatalab.cloud -d www.codatalab.cloud  # Replace email; remove www if not needed

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/codatalab/deployment/frontend/dist  # Replace with absolute path to your frontend/dist folder
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/codatalab/deployment/dhparam  # Replace with absolute path to dhparam folder
      o: bind
  dbdata:

networks:
  app-network:
    driver: bridge